[
    {
        "title": "TruBlu",
        "description": "Revolutionize your college tour experience with TruBlu, a platform that matches students with personalized tour guides based on interests and goals.",
        "long_text": "TruBlu is a groundbreaking web-based application that revolutionizes the traditional college campus tour into a transformative and insightful journey. Tailored specifically for prospective students, TruBlu offers a unique matching system that pairs individuals with tour guides based on shared interests, academic focuses, and extracurricular activities. This one-on-one approach ensures that each tour is personalized and deeply informative, providing a real sense of what life at the campus is like.",
        "key_features": [
            [
                "User Authentication",
                "Utilizes Python's Hashlib and UUID for secure password hashing and user authentication, ensuring a safe user experience with secure sign-up and login processes."
            ],
            [
                "Profile Customization",
                "Allows users to create detailed profiles using Flask's render_template for dynamic content delivery, enhancing the matching process with tour guides."
            ],
            [
                "Advanced Search Functionality",
                "Employs Flask to manage HTTP requests and responses efficiently. This enables users to search for guides based on various criteria, making it easy to find the perfect match."
            ],
            [
                "Intelligent Recommendation Engine",
                "Utilizes user preferences to suggest the most suitable guides, ensuring relevant and meaningful connections. This feature is enhanced by the backend technologies (Flask and SQLite), which handle data management and logic processing."
            ],
            [
                "Session Management",
                "Uses Flask sessions to maintain user states across the web application, ensuring a seamless user experience."
            ],
            [
                "Front-End Development",
                "Developed using HTML and CSS, it provides a clean and user-friendly interface. Flask's render_template supports this, helping to return HTML files dynamically based on user interactions."
            ]
        ],
        "youtube_video": "https://www.youtube.com/embed/U9dl5rsrCug?si=5VxHEO0HmcPqHNEF",
        "technologies": [
            "Flask",
            "SQLite",
            "Python",
            "HTML",
            "CSS",
            "Hashlib",
            "UUID"
        ],
        "link": "https://github.com/jjspill/truBlu/",
        "documents": [
            {
                "title": "Concept",
                "path": "/pdf/truBlu/TruBlu-Concept.pdf"
            },
            {
                "title": "User Requirements",
                "path": "/pdf/truBlu/TruBlu-User-Requirements.pdf"
            },
            {
                "title": "Project Planning",
                "path": "/pdf/truBlu/TruBlu-Project-Planning.pdf"
            },
            {
                "title": "Lo-Fi Prototype",
                "path": "/pdf/truBlu/TruBlu-LoFi-Prototype.pdf"
            },
            {
                "title": "Testing and Debugging Report",
                "path": "/pdf/truBlu/TruBlu-Testing-and-Debugging-Report.pdf"
            }
        ]
    },
    {
        "title": "Economy Simulator",
        "description": "An advanced agent-based model that simulates complex banking behaviors and economic interactions, providing insights into market stability and financial risk propagation.",
        "long_text": "Motivated by the Silicon Valley Bank crash, this cutting-edge project leverages sophisticated agent-based modeling to explore the intricate dynamics of banking systems. The model simulates a scaled-down economy, encompassing five banks, five businesses, and ten account holders, to analyze the effects of interest rate fluctuations on financial stability. Each timestep represents a month of economic activity, meticulously detailing the interactions between banks, businesses, and individuals. This high-fidelity simulation captures the cascading effects of financial risk and provides a robust framework for understanding the macroeconomic factors that influence market behaviors.",
        "key_features": [
            [
                "Dynamic Interest Rate Modeling",
                "Accurately simulates the impact of varying interest rates on borrowing, spending, and lending, highlighting their role in economic stability."
            ],
            [
                "High Variability and Expressiveness",
                "Employs scaled initial values to enhance the model's variability and expressiveness, ensuring realistic economic simulations."
            ],
            [
                "Detailed Simulation Runs",
                "Conducts comprehensive simulation runs over 100 timesteps, showcasing the nuanced fluctuations in cash balances across different economic agents."
            ],
            [
                "Sophisticated Transaction Updates",
                "Utilizes a core update function that sequentially processes transactions for each node, ensuring precise monthly economic activities."
            ],
            [
                "Comprehensive Financial Modeling",
                "Integrates complex interactions and relationships between banks, businesses, and account holders, providing a thorough understanding of financial dynamics."
            ]
        ],
        "technologies": [
            "Python",
            "NetworkX",
            "Matplotlib",
            "NumPy"
        ],
        "link": "https://github.com/jjspill/EconomySimulator",
        "documents": [
            {
                "title": "Report",
                "path": "/pdf/economySimulator/Report.pdf"
            },
            {
                "title": "Executive Summary",
                "path": "/pdf/economySimulator/Executive-Summary.pdf"
            },
            {
                "title": "Visual Analysis",
                "path": "/pdf/economySimulator/Visual-Analysis.pdf"
            }
        ]
    },
    {
        "title": "ClothingCrawler",
        "description": "A web scraping solution that aggregates and analyzes fashion data from various online retailers.",
        "long_text": "ClothingCrawler is a sophisticated web scraping project that revolutionizes how fashion data is collected and analyzed. Developed to handle the complexities of extracting data from multiple e-commerce sites, ClothingCrawler leverages asynchronous programming with aiohttp and BeautifulSoup to efficiently parse large sitemaps and individual product pages. The system integrates seamlessly with AWS data storage and processing services, ensuring scalability and reliability. The scraper adapts to various site structures and price formats by employing a dynamic configuration for different brands, providing accurate and comprehensive data collection. The solution also includes error handling and retry mechanisms to maintain robustness even when encountering incomplete or erroneous data.",
        "key_features": [
            [
                "Asynchronous Web Scraping",
                "Utilizes aiohttp for asynchronous HTTP requests, significantly speeding up data collection."
            ],
            [
                "Dynamic Brand Configuration",
                "Adapts to different site structures and price formats through customizable configurations for each brand."
            ],
            [
                "AWS Integration",
                "Leverages AWS DynamoDB for data storage and S3 for image storage, ensuring scalability and reliability."
            ],
            [
                "Data Logging and Analytics",
                "Includes detailed logging and tracking of failed URLs and parsing statistics for ongoing performance monitoring."
            ],
            [
                "Automated Processing Pipelines",
                "Supports automated workflows for parsing sitemaps, extracting product details, and uploading data to the cloud."
            ],
            [
                "Robust Error Handling",
                "Implements extensive error handling and retry mechanisms to manage network issues and data inconsistencies."
            ]
        ],
        "technologies": [
            "Python",
            "aiohttp",
            "BeautifulSoup",
            "TQDM",
            "Boto3",
            "AWS DynamoDB",
            "AWS S3",
            "Dataclasses"
        ],
        "documents": [],
        "link": ""
    },
    {
        "title": "SPACInsider",
        "description": "September 2023 - Present",
        "long_text": "Leading backend development and cloud infrastructure optimization to enhance data aggregation and system reliability.",
        "key_features": [
            [
                "Frontend Integration",
                "Redefined frontend interfaces, including redesigning a data dashboard to include additional functionalities."
            ],
            [
                "Custom Solutions",
                "Developed custom solutions for old WordPress plugins, notably an RSS Aggregator and Calendar Backend/API."
            ],
            [
                "Documentation",
                "Improved documentation for onboarding new developers and maintaining existing codebases."
            ],
            [
                "Collaboration",
                "Worked closely with other engineers, stakeholders, and analysts to create custom solutions."
            ],
            [
                "On-Call Duties",
                "Managed on-call responsibilities, debugging and fixing issues on the fly."
            ],
            [
                "Real-Time Error Monitoring",
                "Integrated Sentry with Google Chat for real-time error alerts, significantly enhancing response times."
            ]
        ],
        "technologies": [
            "TypeScript",
            "Python",
            "React.js",
            "Amazon Web Services (AWS)",
            "AWS Lambda",
            "AWS S3",
            "AWS API Gateway",
            "AWS DynamoDB",
            "AWS CDK",
            "AWS CloudFormation",
            "AWS Route 53",
            "AWS Secrets Manager",
            "AWS RDS",
            "AWS CloudWatch",
            "AWS IAM",
            "AWS SNS",
            "Docker",
            "Next.js",
            "SWR",
            "useSWRInfinite",
            "Airtable",
            "PostgreSQL",
            "Bitbucket",
            "Bitbucket Pipelines",
            "Sentry",
            "OAuth",
            "GraphQL",
            "FastAPI",
            "Node.js",
            "Redis",
            "XML Pull Parser",
            "Tailwind CSS",
            "Hono"
        ],
        "company": "SPACInsider"
    },
    {
        "title": "Intel",
        "description": "June 2021 - December 2021",
        "long_text": "I enhanced test initiation and validation processes at Intel to improve overall test efficiency and system reliability. I managed and optimized SSD client pools, ensuring the health and performance of test drives were maintained. Utilizing automated testing frameworks, I conducted comprehensive firmware validation that enabled efficient triage and debugging of errors. Additionally, I developed user-friendly GUIs that streamlined the test initiation process, reducing setup times and simplifying complex procedures into a few clicks, greatly enhancing usability for my team members.",
        "key_features": [
            [
                "SSD Client Pool Management",
                "Managed and optimized SSD client pools, ensuring the health and performance of test drives."
            ],
            [
                "Firmware Validation",
                "Leveraged automated testing frameworks to conduct comprehensive firmware validation, enabling efficient triage and debugging of errors."
            ],
            [
                "GUI Development",
                "Developed user-friendly interfaces to streamline test initiation processes, significantly reducing setup times."
            ]
        ],
        "technologies": [
            "Python",
            "Tkinter",
            "Git",
            "Jira",
            "SSD Firmware",
            "NVMe",
            "CI/CD Pipeline",
            "FAST (Firmware Automation System Test)"
        ],
        "company": "Intel"
    },
    {
        "title": "Solidigm",
        "description": "January 2022 - June 2023",
        "long_text": "After my team transitioned from Intel to Solidigm, I focused on optimizing development environments and streamlining test automation processes to enhance engineering efficiency. I built automation scripts to ensure compatibility across different environments, significantly reducing manual labor. I also streamlined the migration and automation of extensive test suites, facilitating seamless transitions and boosting productivity. Conducting extensive SSD testing and validation, I identified and documented necessary modifications to ensure compatibility with various systems.",
        "key_features": [
            [
                "Development Environment Optimization",
                "Built automation scripts to ensure compatibility across different environments, significantly reducing manual labor."
            ],
            [
                "Test Migration and Automation",
                "Streamlined the migration and automation of extensive test suites, facilitating seamless transitions and boosting productivity."
            ],
            [
                "SSD Testing and Validation",
                "Conducted extensive testing on SSDs, identifying and documenting necessary modifications for compatibility with various systems."
            ]
        ],
        "technologies": [
            "Linux",
            "Python",
            "Bash",
            "SSD Firmware",
            "NVMe",
            "CI/CD Pipeline",
            "FAST (Firmware Automation System Test)"
        ],
        "company": "Solidigm"
    }
]